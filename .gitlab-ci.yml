image: node:12.16.3-buster-slim

before_script:
    - apt-get update -qq && apt-get install

stages:
    - build
    - deploy-heroku
    - deploy-digitalocean

build:
    stage: build
    image: node
    script: 
        - echo "Start building App"
        - npm install
        - CI=false npm run build
        - echo "Build successfully!"
    artifacts:
        expire_in: 1 hour
        paths:
            - build
            - node_modules/
    only:
        - adimas

Deploy-to-heroku:
    image: ruby:2.7.1
    stage: deploy-heroku
    script:
        - apt-get update -qy
        - apt-get install -y ruby-dev
        - gem install dpl
        - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
        - dpl --provider=heroku --app=${DEPLOYMENT_NAME_STAGING} --api-key=${HEROKU_API}
    only:
        - staging

deploy:
    stage: deploy-digitalocean
    image: kroniak/ssh-client
    before_script:
        - echo "deploying app"
    script:
        - scp -i $DIGITALOCEAN_PRIVATE_KEY -r ~/build root@$SSH_IP:/frontend
    only:
        - adimas

# install_dependencies:
#     stage: build
#     script:
#         - npm install
#     artifacts:
#         paths:
#             - node_modules/

# Deploy-to-digitalocean:
#     image: node:latest
#     stage: deploy-digitalocean
#     # environment:
#     #     name: staging
#     #     url: theknowledgeapp.com
#     before_script:
#         - apt-get update -qq
#         - apt-get install -qq git
#         # Setup SSH deploy keys
#         - 'which ssh-agent || ( apt-get install -qq openssh-client )'
#         - eval $(ssh-agent -s)
#         - ssh-add <(echo "$SSH_PRIVATE_KEY")
#         - mkdir -p ~/.ssh
#         - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#     script:
#         - ssh -i ${} {$SSH_USERNAME}@{$SSH_IP} "cd /var/www/{path-to-project} && git checkout dev && git pull origin staging && npm run build && exit"
#     only :
#         - staging


# Build to Staging:
#   stage: build-staging
#   environment:
#     name: development
#   before_script:
#     - yarn
#   script:
#     - npx netlify-cli build
#   only:
#     - staging

# Deploy to Staging:
#   stage: deploy-staging
#   environment:
#     name: development
#     url: https://brives-staging.netlify.app
#   only:
#     - staging
#   before_script:
#     - yarn
#   script:
#     - yarn run build
#     - npx netlify-cli deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod
